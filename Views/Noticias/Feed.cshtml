@{
    ViewBag.Title = "FeedView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Feed de Notícias</h2>
<div class="row">
    <div>
        <h3>Documentos</h3>
        <ul id="documentsList">
            <li>
                <a href="/caminho/para/documento.pdf" target="_blank">Documento PDF</a>
                <button onclick="addFavoriteDocument('Documento PDF', '/caminho/para/documento.pdf')">Favoritar</button>
            </li>
            <!-- Adicione mais documentos conforme necessário -->
        </ul>
    </div>
    <div style="width: 50%; float: right; border-left: 1px solid #ccc; padding: 10px;">
        <h3>Favoritos</h3>
        <ul id="favoriteLinks"></ul>
        <!-- Para adicionar links diretamente -->
        <input type="text" id="newLinkName" placeholder="Nome do link" />
        <input type="text" id="newLinkUrl" placeholder="URL do link" />
        <button onclick="addFavoriteLink(document.getElementById('newLinkName').value, document.getElementById('newLinkUrl').value)">Adicionar Link</button>
    </div>




</div>
<div class="row">

    <div id="feed-noticias" class="feed-noticias"></div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        fetch('/Noticias/ListarNoticias')
            .then(response => response.json())
            .then(noticias => {
                const feedContainer = document.getElementById('feed-noticias');
                noticias.forEach(noticia => {
                    const noticiaElement = document.createElement('div');
                    noticiaElement.classList.add('noticia-resumo', 'mb-4');

                    noticiaElement.innerHTML = `
                        <h3>${noticia.Titulo}</h3>
                        <img src="${noticia.ImagemPrincipal}" alt="Imagem de ${noticia.Titulo}" class="img-fluid" style="max-width: 200px; height: auto;" />
                        <p>
                            ${noticia.Conteudo.substring(0, 100)}...
                            <a href="/Noticias/Detalhes/${noticia.Id}">Leia mais</a>
                        </p>
                    `;
                    feedContainer.appendChild(noticiaElement);
                });
            })
            .catch(error => console.error('Erro ao carregar o feed de notícias:', error));
    });

    const chaveUser = 'F81587'
    async function addFavorite(itemType, title, url) {
        const userId = chaveUser; // Exemplo de ID do usuário
        await fetch(`/favoriteApi/AddFavorite?userId=${userId}&title=${title}&url=${url}&type=${itemType}`, {
            method: 'POST'
        });

        loadFavorites(userId); // Recarregar a lista após adicionar o item
    }

    // Exemplo de uso para adicionar um documento como favorito
    async function addFavoriteDocument(title, url) {
        await addFavorite("documento", title, url);
    }

    // Exemplo de uso para adicionar um link como favorito
    async function addFavoriteLink(title, url) {
        await addFavorite("link", title, url);
    }

    async function loadFavorites(userId) {
        const response = await fetch(`/favoriteApi/GetFavorites?userId=${userId}`);
        const data = await response.json();

        const favoriteLinks = document.getElementById('favoriteLinks');
        favoriteLinks.innerHTML = ''; // Limpar a lista antes de recarregar
        data.Favorites.forEach(link => {
            const listItem = document.createElement('li');
            listItem.innerHTML = `
            <a href="${link.Url}" target="_blank">${link.Title}</a> (${link.Type})
            <button onclick="removeFavoriteLink('${userId}', '${link.Title}')">Remover</button>
        `;
            favoriteLinks.appendChild(listItem);
        });
    }

    async function removeFavoriteLink(userId, title) {
        await fetch(`/favoriteApi/RemoveFavorite?userId=${userId}&title=${encodeURIComponent(title)}`, {
            method: 'POST'
        });

        loadFavorites(userId); // Recarregar a lista após remover o link
    }

    // Carregar os favoritos ao carregar a página
    loadFavorites(chaveUser);



</script>
